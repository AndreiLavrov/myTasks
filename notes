'<=' - правильно, а '=<' - не прав. сначало '<', а потом '='
(a <= item && item <= b) а не (a <= item <= b)
' let sumProd = 0;' лучше, чем 'let sumProd;' задавать значение..
str.split(badWord).join(goodWord); -слова в роле разделителей...ЗАМЕНИТЬ ненужные слова
person['name'] === person.name  (var key = 'name'; person[key])  если имя свойства хранится в переменной (var key = "name"),
 то единственный способ к нему обратиться – это квадратные скобки person[key].
[1,2] !== [1,2];










                 для изучения !!
eslint
jasmine
moment!!!
koans


tab настроить в webStorm
spyOn(window, 'prompt').and.callFake(function(param) {
			return false;});    вместо фальш раздельная строка не работает!  почему ??
...code review ...
localStorage testing            --- les4
Cannot set property 'innerText' of null    -- les5


*************************** ESLINT ***********************
toMatch
toBeDefined
toBeNull
toBeTruthy
toContain
toBeLessThan toBeGreaterThan
toBeCloseTo  точн матем сравнение
toThrow
toThrowError
..spyOn...
toHaveBeenCalled   - что был вызван  toHaveBeenCalledWith - был вызван с аргументами
and.callThrough   - перехват выполнения
and.returnValue  - все вызовы функции будут возвращать определенное значение.
and.callFake    - все вызовы шпиону будут делегированы предоставленной функции
and.throwError   - всеми вызовами шпиону throw указанное значение будет считаться ошибкой.
and.stub    -   исходное поведение 'окурка' может быть возвращено в любое время с помощью
.calls.any(): возвращает, false если шпион вообще не был вызван, а затем true один раз произойдет хотя бы один вызов.
.calls.count(): возвращает количество вызовов шпиона
.calls.argsFor(index): возвращает аргументы, переданные на номер вызова index

.calls.allArgs(): возвращает аргументы для всех вызовов
.calls.all(): возвращает контекст (the this) и аргументы, переданные всем вызовам
.calls.mostRecent(): возвращает контекст (the this) и аргументы для самого последнего вызова
.calls.first(): возвращает контекст (the this) и аргументы для первого вызова
.calls.first().object --  "object-свойство" устанавливается равным значению, thisкогда был вызван шпион
expect(foo).toHaveBeenCalledWith(jasmine.any(Number), jasmine.any(Function));

.calls.reset(): очищает все отслеживания для шпиона
expect({}).toEqual(jasmine.any(Object));
jasmine.objectContaining  -- когда ожидание заботится только об определенных парах ключ / значение в фактическом.
jasmine.clock().install     jasmine.clock().tick    --- для таймаутов

